{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let findPro;\n  let index;\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr._id === product._id);\n      if (check) {\n        return state;\n      } else {\n        const Tprice = product.totalPrice;\n        const Tquantities = state.totalQuantities + 1;\n        return {\n          ...state,\n          products: [...state.products, product],\n          totalPrice: state.totalPrice + Tprice,\n          totalQuantities: Tquantities\n        };\n      }\n    case 'INC':\n      {\n        let Tprice;\n        findPro = state.products.find(product => product._id === action.payload);\n        index = state.products.findIndex(product => product._id === action.payload);\n        findPro.quantity += 1;\n        state.products[index] = findPro;\n        Tprice = state.totalPrice + findPro.value * findPro.quantity;\n        return {\n          ...state,\n          totalPrice: Tprice\n          //  totalQuantities: state.totalQuantities + 1,\n        };\n      }\n\n    case 'DEC':\n      {\n        let Tprice;\n        findPro = state.products.find(product => product._id === action.payload);\n        index = state.products.findIndex(product => product._id === action.payload);\n        if (findPro.quantity > 1) {\n          findPro.quantity -= 1;\n          state.products[index] = findPro;\n          return {\n            ...state,\n            totalPrice: state.totalPrice - findPro.discountPrice,\n            totalQuantities: state.totalQuantities - 1\n          };\n        } else {\n          return state;\n        }\n      }\n    case 'REMOVE':\n      {\n        findPro = state.products.find(product => product._id === action.payload);\n        const filtered = state.products.filter(product => product._id !== action.payload);\n        return {\n          ...state,\n          products: filtered,\n          totalPrice: state.totalPrice - findPro.totalPrice,\n          totalQuantities: state.totalQuantities - 1\n        };\n      }\n    case 'INC_SINGLE':\n      {\n        let Tprice;\n        let Tquantities;\n        index = state.products.findIndex(product => product._id === action.payload._id);\n        findPro = state.products.find(product => product._id === action.payload._id);\n        if (action.payload.increment === true) {\n          if (findPro.quantity != 5) {\n            findPro = {\n              ...findPro,\n              quantity: findPro.quantity + 1,\n              totalPrice: findPro.totalPrice + findPro.price\n            };\n            state.products[index] = findPro;\n            Tprice = state.totalPrice + findPro.price;\n            return {\n              ...state,\n              products: [...state.products],\n              totalPrice: Tprice\n            };\n          }\n        } else {\n          if (findPro.quantity > 1) {\n            findPro = {\n              ...findPro,\n              quantity: findPro.quantity - 1,\n              totalPrice: findPro.totalPrice - findPro.price\n            };\n            state.products[index] = findPro;\n            Tprice = state.totalPrice - findPro.price;\n            return {\n              ...state,\n              products: [...state.products],\n              totalPrice: Tprice\n            };\n          }\n        }\n        return state;\n      }\n    case 'EMPTY_CART':\n      {\n        return {\n          ...initState,\n          totalPrice: 0,\n          totalQuantities: 0\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initState","products","totalPrice","totalQuantities","cartReducer","state","arguments","length","undefined","action","findPro","index","type","product","quantity","payload","check","find","pr","_id","Tprice","Tquantities","findIndex","value","discountPrice","filtered","filter","increment","price"],"sources":["D:/Study/SEM_07/Final Year Project/Project/ShramikFrontend/shramik/src/store/reducers/cartReducer.js"],"sourcesContent":["const initState = {\r\n  products: [],\r\n  totalPrice: 0,\r\n  totalQuantities: 0,\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  let findPro;\r\n  let index;\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      const { product, quantity } = action.payload;\r\n      const check = state.products.find((pr) => pr._id === product._id);\r\n      if (check) {\r\n        return state;\r\n      } else {\r\n        const Tprice = product.totalPrice;\r\n        const Tquantities = state.totalQuantities + 1;\r\n\r\n        return {\r\n          ...state,\r\n          products: [...state.products, product],\r\n          totalPrice: state.totalPrice + Tprice,\r\n          totalQuantities: Tquantities,\r\n        };\r\n      }\r\n    case 'INC': {\r\n      let Tprice;\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload\r\n      );\r\n      findPro.quantity += 1;\r\n      state.products[index] = findPro;\r\n      Tprice = state.totalPrice + findPro.value * findPro.quantity;\r\n      return {\r\n        ...state,\r\n        totalPrice: Tprice,\r\n        //  totalQuantities: state.totalQuantities + 1,\r\n      };\r\n    }\r\n    case 'DEC': {\r\n      let Tprice;\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload\r\n      );\r\n      if (findPro.quantity > 1) {\r\n        findPro.quantity -= 1;\r\n        state.products[index] = findPro;\r\n        return {\r\n          ...state,\r\n          totalPrice: state.totalPrice - findPro.discountPrice,\r\n          totalQuantities: state.totalQuantities - 1,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    case 'REMOVE': {\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      const filtered = state.products.filter(\r\n        (product) => product._id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        products: filtered,\r\n        totalPrice: state.totalPrice - findPro.totalPrice,\r\n        totalQuantities: state.totalQuantities - 1,\r\n      };\r\n    }\r\n    case 'INC_SINGLE': {\r\n      let Tprice;\r\n      let Tquantities;\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload._id\r\n      );\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload._id\r\n      );\r\n\r\n      if (action.payload.increment === true) {\r\n        if (findPro.quantity != 5) {\r\n          findPro = {\r\n            ...findPro,\r\n            quantity: findPro.quantity + 1,\r\n            totalPrice: findPro.totalPrice + findPro.price,\r\n          };\r\n          state.products[index] = findPro;\r\n          Tprice = state.totalPrice + findPro.price;\r\n\r\n          return {\r\n            ...state,\r\n            products: [...state.products],\r\n            totalPrice: Tprice,\r\n          };\r\n        }\r\n      } else {\r\n        if (findPro.quantity > 1) {\r\n          findPro = {\r\n            ...findPro,\r\n            quantity: findPro.quantity - 1,\r\n            totalPrice: findPro.totalPrice - findPro.price,\r\n          };\r\n          state.products[index] = findPro;\r\n          Tprice = state.totalPrice - findPro.price;\r\n\r\n          return {\r\n            ...state,\r\n            products: [...state.products],\r\n            totalPrice: Tprice,\r\n          };\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    case 'EMPTY_CART': {\r\n      return { ...initState, totalPrice: 0, totalQuantities: 0 };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cartReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}