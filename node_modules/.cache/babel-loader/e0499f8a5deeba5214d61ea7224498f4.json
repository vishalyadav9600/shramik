{"ast":null,"code":"import * as actionType from '../actionTypes/authActionsTypes';\nimport { REHYDRATE } from 'redux-persist';\nimport getCookie from '../../helpers/getCookie.js';\nconst initialState = {\n  loading: false,\n  user: null,\n  error: '',\n  token: '',\n  authenticated: false,\n  updated: false\n};\nexport default function authReducer(state = initialState, action) {\n  if (action.type === REHYDRATE) {\n    var _action$payload;\n\n    const cookie = getCookie((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.authReducer.token);\n\n    if (!cookie) {\n      return { ...initialState\n      };\n    }\n\n    return { ...action.payload.authReducer\n    };\n  } else if (action.type === actionType.LOGIN_BEGIN) {\n    return { ...state,\n      loading: true\n    };\n  } else if (action.type === actionType.ON_LOGIN_ERROR) {\n    return { ...state,\n      error: action.payload.error,\n      loading: false\n    };\n  } else if (action.type === actionType.ON_LOGIN_SUCCESS) {\n    return { ...state,\n      loading: false,\n      user: action.payload.user,\n      authenticated: true,\n      token: action.payload.token\n    };\n  } else if (action.type === actionType.SESSION_EXPIRED) {\n    return { ...initialState\n    };\n  } else if (action.type === actionType.SIGN_OUT) {\n    return { ...initialState\n    };\n  } else if (action.type === actionType.USER_UPDATE) {\n    return { ...state,\n      loading: false,\n      user: action.payload.user,\n      authenticated: true,\n      token: action.payload.token,\n      updated: true\n    };\n  } else if (action.type === actionType.ON_UPDATE_SUCCESS) {\n    return { ...state,\n      updated: false\n    };\n  } else if (action.type === actionType.ON_UPDATE_ERROR) {\n    return { ...state,\n      error: action.payload.error\n    };\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["/Users/vishal/Desktop/food-ordering-website-main/src/store/reducers/authReducer.js"],"names":["actionType","REHYDRATE","getCookie","initialState","loading","user","error","token","authenticated","updated","authReducer","state","action","type","cookie","payload","LOGIN_BEGIN","ON_LOGIN_ERROR","ON_LOGIN_SUCCESS","SESSION_EXPIRED","SIGN_OUT","USER_UPDATE","ON_UPDATE_SUCCESS","ON_UPDATE_ERROR"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,iCAA5B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE,KALI;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;AASA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGR,YAA7B,EAA2CS,MAA3C,EAAmD;AAChE,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,SAApB,EAA+B;AAAA;;AAC7B,UAAMa,MAAM,GAAGZ,SAAS,oBAACU,MAAM,CAACG,OAAR,oDAAC,gBAAgBL,WAAhB,CAA4BH,KAA7B,CAAxB;;AACA,QAAI,CAACO,MAAL,EAAa;AACX,aAAO,EAAE,GAAGX;AAAL,OAAP;AACD;;AACD,WAAO,EAAE,GAAGS,MAAM,CAACG,OAAP,CAAeL;AAApB,KAAP;AACD,GAND,MAMO,IAAIE,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACgB,WAA/B,EAA4C;AACjD,WAAO,EAAE,GAAGL,KAAL;AAAYP,MAAAA,OAAO,EAAE;AAArB,KAAP;AACD,GAFM,MAEA,IAAIQ,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACiB,cAA/B,EAA+C;AACpD,WAAO,EAAE,GAAGN,KAAL;AAAYL,MAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAAlC;AAAyCF,MAAAA,OAAO,EAAE;AAAlD,KAAP;AACD,GAFM,MAEA,IAAIQ,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACkB,gBAA/B,EAAiD;AACtD,WAAO,EACL,GAAGP,KADE;AAELP,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeV,IAHhB;AAILG,MAAAA,aAAa,EAAE,IAJV;AAKLD,MAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR;AALjB,KAAP;AAOD,GARM,MAQA,IAAIK,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACmB,eAA/B,EAAgD;AACrD,WAAO,EAAE,GAAGhB;AAAL,KAAP;AACD,GAFM,MAEA,IAAIS,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACoB,QAA/B,EAAyC;AAC9C,WAAO,EAAE,GAAGjB;AAAL,KAAP;AACD,GAFM,MAEA,IAAIS,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACqB,WAA/B,EAA4C;AACjD,WAAO,EACL,GAAGV,KADE;AAELP,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeV,IAHhB;AAILG,MAAAA,aAAa,EAAE,IAJV;AAKLD,MAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR,KALjB;AAMLE,MAAAA,OAAO,EAAE;AANJ,KAAP;AAQD,GATM,MASA,IAAIG,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACsB,iBAA/B,EAAkD;AACvD,WAAO,EAAE,GAAGX,KAAL;AAAYF,MAAAA,OAAO,EAAE;AAArB,KAAP;AACD,GAFM,MAEA,IAAIG,MAAM,CAACC,IAAP,KAAgBb,UAAU,CAACuB,eAA/B,EAAgD;AACrD,WAAO,EAAE,GAAGZ,KAAL;AAAYL,MAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAAlC,KAAP;AACD,GAFM,MAEA;AACL,WAAOK,KAAP;AACD;AACF","sourcesContent":["import * as actionType from '../actionTypes/authActionsTypes';\nimport { REHYDRATE } from 'redux-persist';\nimport getCookie from '../../helpers/getCookie.js';\n\nconst initialState = {\n  loading: false,\n  user: null,\n  error: '',\n  token: '',\n  authenticated: false,\n  updated: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  if (action.type === REHYDRATE) {\n    const cookie = getCookie(action.payload?.authReducer.token);\n    if (!cookie) {\n      return { ...initialState };\n    }\n    return { ...action.payload.authReducer };\n  } else if (action.type === actionType.LOGIN_BEGIN) {\n    return { ...state, loading: true };\n  } else if (action.type === actionType.ON_LOGIN_ERROR) {\n    return { ...state, error: action.payload.error, loading: false };\n  } else if (action.type === actionType.ON_LOGIN_SUCCESS) {\n    return {\n      ...state,\n      loading: false,\n      user: action.payload.user,\n      authenticated: true,\n      token: action.payload.token,\n    };\n  } else if (action.type === actionType.SESSION_EXPIRED) {\n    return { ...initialState };\n  } else if (action.type === actionType.SIGN_OUT) {\n    return { ...initialState };\n  } else if (action.type === actionType.USER_UPDATE) {\n    return {\n      ...state,\n      loading: false,\n      user: action.payload.user,\n      authenticated: true,\n      token: action.payload.token,\n      updated: true,\n    };\n  } else if (action.type === actionType.ON_UPDATE_SUCCESS) {\n    return { ...state, updated: false };\n  } else if (action.type === actionType.ON_UPDATE_ERROR) {\n    return { ...state, error: action.payload.error };\n  } else {\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}