{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  let findPro;\n  let index;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr._id === product._id);\n\n      if (check) {\n        return state;\n      } else {\n        const Tprice = product.totalPrice;\n        const Tquantities = state.totalQuantities + 1;\n        return { ...state,\n          products: [...state.products, product],\n          totalPrice: state.totalPrice + Tprice,\n          totalQuantities: Tquantities\n        };\n      }\n\n    case 'INC':\n      {\n        let Tprice;\n        findPro = state.products.find(product => product._id === action.payload);\n        index = state.products.findIndex(product => product._id === action.payload);\n        findPro.quantity += 1;\n        state.products[index] = findPro;\n        Tprice = state.totalPrice + findPro.value * findPro.quantity;\n        return { ...state,\n          totalPrice: Tprice //  totalQuantities: state.totalQuantities + 1,\n\n        };\n      }\n\n    case 'DEC':\n      {\n        let Tprice;\n        findPro = state.products.find(product => product._id === action.payload);\n        index = state.products.findIndex(product => product._id === action.payload);\n\n        if (findPro.quantity > 1) {\n          findPro.quantity -= 1;\n          state.products[index] = findPro;\n          return { ...state,\n            totalPrice: state.totalPrice - findPro.discountPrice,\n            totalQuantities: state.totalQuantities - 1\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case 'REMOVE':\n      {\n        findPro = state.products.find(product => product._id === action.payload);\n        const filtered = state.products.filter(product => product._id !== action.payload);\n        return { ...state,\n          products: filtered,\n          totalPrice: state.totalPrice - findPro.totalPrice,\n          totalQuantities: state.totalQuantities - 1\n        };\n      }\n\n    case 'INC_SINGLE':\n      {\n        let Tprice;\n        let Tquantities;\n        index = state.products.findIndex(product => product._id === action.payload._id);\n        findPro = state.products.find(product => product._id === action.payload._id);\n\n        if (action.payload.increment === true) {\n          if (findPro.quantity != 5) {\n            findPro = { ...findPro,\n              quantity: findPro.quantity + 1,\n              totalPrice: findPro.totalPrice + findPro.price\n            };\n            state.products[index] = findPro;\n            Tprice = state.totalPrice + findPro.price;\n            return { ...state,\n              products: [...state.products],\n              totalPrice: Tprice\n            };\n          }\n        } else {\n          if (findPro.quantity > 1) {\n            findPro = { ...findPro,\n              quantity: findPro.quantity - 1,\n              totalPrice: findPro.totalPrice - findPro.price\n            };\n            state.products[index] = findPro;\n            Tprice = state.totalPrice - findPro.price;\n            return { ...state,\n              products: [...state.products],\n              totalPrice: Tprice\n            };\n          }\n        }\n\n        return state;\n      }\n\n    case 'EMPTY_CART':\n      {\n        return { ...initState,\n          totalPrice: 0,\n          totalQuantities: 0\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["D:/Study/SEM_07/Final Year Project/Project/shramik/src/store/reducers/cartReducer.js"],"names":["initState","products","totalPrice","totalQuantities","cartReducer","state","action","findPro","index","type","product","quantity","payload","check","find","pr","_id","Tprice","Tquantities","findIndex","value","discountPrice","filtered","filter","increment","price"],"mappings":"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","sourcesContent":["const initState = {\r\n  products: [],\r\n  totalPrice: 0,\r\n  totalQuantities: 0,\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  let findPro;\r\n  let index;\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      const { product, quantity } = action.payload;\r\n      const check = state.products.find((pr) => pr._id === product._id);\r\n      if (check) {\r\n        return state;\r\n      } else {\r\n        const Tprice = product.totalPrice;\r\n        const Tquantities = state.totalQuantities + 1;\r\n\r\n        return {\r\n          ...state,\r\n          products: [...state.products, product],\r\n          totalPrice: state.totalPrice + Tprice,\r\n          totalQuantities: Tquantities,\r\n        };\r\n      }\r\n    case 'INC': {\r\n      let Tprice;\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload\r\n      );\r\n      findPro.quantity += 1;\r\n      state.products[index] = findPro;\r\n      Tprice = state.totalPrice + findPro.value * findPro.quantity;\r\n      return {\r\n        ...state,\r\n        totalPrice: Tprice,\r\n        //  totalQuantities: state.totalQuantities + 1,\r\n      };\r\n    }\r\n    case 'DEC': {\r\n      let Tprice;\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload\r\n      );\r\n      if (findPro.quantity > 1) {\r\n        findPro.quantity -= 1;\r\n        state.products[index] = findPro;\r\n        return {\r\n          ...state,\r\n          totalPrice: state.totalPrice - findPro.discountPrice,\r\n          totalQuantities: state.totalQuantities - 1,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    case 'REMOVE': {\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload\r\n      );\r\n      const filtered = state.products.filter(\r\n        (product) => product._id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        products: filtered,\r\n        totalPrice: state.totalPrice - findPro.totalPrice,\r\n        totalQuantities: state.totalQuantities - 1,\r\n      };\r\n    }\r\n    case 'INC_SINGLE': {\r\n      let Tprice;\r\n      let Tquantities;\r\n      index = state.products.findIndex(\r\n        (product) => product._id === action.payload._id\r\n      );\r\n      findPro = state.products.find(\r\n        (product) => product._id === action.payload._id\r\n      );\r\n\r\n      if (action.payload.increment === true) {\r\n        if (findPro.quantity != 5) {\r\n          findPro = {\r\n            ...findPro,\r\n            quantity: findPro.quantity + 1,\r\n            totalPrice: findPro.totalPrice + findPro.price,\r\n          };\r\n          state.products[index] = findPro;\r\n          Tprice = state.totalPrice + findPro.price;\r\n\r\n          return {\r\n            ...state,\r\n            products: [...state.products],\r\n            totalPrice: Tprice,\r\n          };\r\n        }\r\n      } else {\r\n        if (findPro.quantity > 1) {\r\n          findPro = {\r\n            ...findPro,\r\n            quantity: findPro.quantity - 1,\r\n            totalPrice: findPro.totalPrice - findPro.price,\r\n          };\r\n          state.products[index] = findPro;\r\n          Tprice = state.totalPrice - findPro.price;\r\n\r\n          return {\r\n            ...state,\r\n            products: [...state.products],\r\n            totalPrice: Tprice,\r\n          };\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    case 'EMPTY_CART': {\r\n      return { ...initState, totalPrice: 0, totalQuantities: 0 };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}