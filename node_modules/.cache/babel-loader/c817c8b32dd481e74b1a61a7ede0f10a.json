{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM_07\\\\Final Year Project\\\\Project\\\\shramik\\\\src\\\\components\\\\auth\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography, makeStyles, Button, Grid, Box, CircularProgress } from '@material-ui/core';\nimport { useDispatch } from 'react-redux'; //local import\n\nimport Textfield from '../partials/FormUI/Textfield';\nimport { login } from '../../store/actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root_left_lower: {\n    //border: '1px solid red',\n    '& > :nth-child(1)': {\n      fontFamily: 'Mulish',\n      fontSize: '.9rem'\n    },\n    '& > :nth-child(2)': {\n      fontFamily: 'Mulish',\n      fontSize: '1.8rem',\n      fontWeight: '700'\n    }\n  },\n  login_button: {\n    width: '100%',\n    marginTop: '20px',\n    background: theme.palette.green,\n    color: 'white',\n    '& :hover': {\n      color: 'black' //  background: 'lightgreen',\n\n    }\n  },\n  recommendation: {\n    fontFamily: 'Mulish',\n    fontSize: '.9rem'\n  },\n  recommendation_link: {\n    fontFamily: 'Mulish',\n    fontWeight: '600',\n    fontSize: '.9rem',\n    cursor: 'pointer',\n    marginLeft: '5px'\n  }\n}));\nexport default function SignInForm({\n  onclick,\n  setClickData,\n  showToast,\n  path\n}) {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    root_left_lower,\n    login_button,\n    recommendation,\n    recommendation_link\n  } = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: root_left_lower,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"get your food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          loginEmail: '',\n          loginPassword: ''\n        },\n        onSubmit: async values => {\n          await dispatch(login(values));\n\n          if (!window.store.getState().authReducer.authenticated) {\n            await setClickData({\n              type: 'error',\n              content: window.store.getState().authReducer.error\n            });\n            showToast();\n          }\n        },\n        validationSchema: Yup.object().shape({\n          loginEmail: Yup.string().email('Invalid email format').required('Required'),\n          loginPassword: Yup.string().min(6, 'password must be atleast 6 characters').required('Password is required')\n        }),\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 12,\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  name: \"loginEmail\",\n                  helpertext: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  type: \"password\",\n                  name: \"loginPassword\",\n                  helpertext: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"secondary\",\n                    size: \"1rem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 27\n                  }, this) : null,\n                  className: login_button,\n                  disableElevation: true,\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      alignItems: \"center\",\n      display: \"flex\",\n      marginTop: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: recommendation,\n        children: \"Dont have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        onClick: () => onclick('signup'),\n        color: \"secondary\",\n        className: recommendation_link,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignInForm, \"ANhP1O+KKVOCWMTK9v55ZKaFMhg=\", false, function () {\n  return [useNavigate, useDispatch, useStyles];\n});\n\n_c = SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["D:/Study/SEM_07/Final Year Project/Project/shramik/src/components/auth/SignInForm.js"],"names":["React","Formik","Form","Yup","useNavigate","Typography","makeStyles","Button","Grid","Box","CircularProgress","useDispatch","Textfield","login","useStyles","theme","root_left_lower","fontFamily","fontSize","fontWeight","login_button","width","marginTop","background","palette","green","color","recommendation","recommendation_link","cursor","marginLeft","SignInForm","onclick","setClickData","showToast","path","navigate","dispatch","loginEmail","loginPassword","values","window","store","getState","authReducer","authenticated","type","content","error","object","shape","string","email","required","min","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//local import\r\nimport Textfield from '../partials/FormUI/Textfield';\r\nimport { login } from '../../store/actions/authActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root_left_lower: {\r\n    //border: '1px solid red',\r\n    '& > :nth-child(1)': {\r\n      fontFamily: 'Mulish',\r\n      fontSize: '.9rem',\r\n    },\r\n    '& > :nth-child(2)': {\r\n      fontFamily: 'Mulish',\r\n      fontSize: '1.8rem',\r\n      fontWeight: '700',\r\n    },\r\n  },\r\n\r\n  login_button: {\r\n    width: '100%',\r\n    marginTop: '20px',\r\n    background: theme.palette.green,\r\n    color: 'white',\r\n    '& :hover': {\r\n      color: 'black',\r\n      //  background: 'lightgreen',\r\n    },\r\n  },\r\n\r\n  recommendation: {\r\n    fontFamily: 'Mulish',\r\n    fontSize: '.9rem',\r\n  },\r\n  recommendation_link: {\r\n    fontFamily: 'Mulish',\r\n    fontWeight: '600',\r\n    fontSize: '.9rem',\r\n    cursor: 'pointer',\r\n    marginLeft: '5px',\r\n  },\r\n}));\r\n\r\nexport default function SignInForm({ onclick, setClickData, showToast, path }) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    root_left_lower,\r\n    login_button,\r\n    recommendation,\r\n    recommendation_link,\r\n  } = useStyles();\r\n  return (\r\n    <div className={root_left_lower}>\r\n      <Typography>get your food</Typography>\r\n      <Typography variant=\"h1\" component=\"h1\">\r\n        Login to Your Account\r\n      </Typography>\r\n      {/* third */}\r\n      <Box marginTop=\"20px\">\r\n        <Formik\r\n          initialValues={{\r\n            loginEmail: '',\r\n            loginPassword: '',\r\n          }}\r\n          onSubmit={async (values) => {\r\n            await dispatch(login(values));\r\n\r\n            if (!window.store.getState().authReducer.authenticated) {\r\n              await setClickData({\r\n                type: 'error',\r\n                content: window.store.getState().authReducer.error,\r\n              });\r\n              showToast();\r\n            }\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            loginEmail: Yup.string()\r\n              .email('Invalid email format')\r\n              .required('Required'),\r\n            loginPassword: Yup.string()\r\n              .min(6, 'password must be atleast 6 characters')\r\n              .required('Password is required'),\r\n          })}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form autoComplete=\"off\">\r\n              <Grid container>\r\n                <Grid xs={12} item>\r\n                  <Box marginTop=\"10px\">\r\n                    <Textfield name=\"loginEmail\" helpertext=\"Email Address\" />\r\n                  </Box>\r\n\r\n                  <Box marginTop=\"10px\">\r\n                    <Textfield\r\n                      type=\"password\"\r\n                      name=\"loginPassword\"\r\n                      helpertext=\"Password\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Button\r\n                      startIcon={\r\n                        isSubmitting ? (\r\n                          <CircularProgress color=\"secondary\" size=\"1rem\" />\r\n                        ) : null\r\n                      }\r\n                      className={login_button}\r\n                      disableElevation\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      {/* <div className={sign_up_google}>\r\n    <img src=\"./social-google.svg\" />\r\n    <Typography>Sign up with Google</Typography>\r\n  </div> */}\r\n      <Box alignItems=\"center\" display=\"flex\" marginTop=\"10px\">\r\n        <Typography className={recommendation}>\r\n          Dont have an account?\r\n        </Typography>\r\n        <Typography\r\n          onClick={() => onclick('signup')}\r\n          color=\"secondary\"\r\n          className={recommendation_link}\r\n        >\r\n          Sign Up\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}