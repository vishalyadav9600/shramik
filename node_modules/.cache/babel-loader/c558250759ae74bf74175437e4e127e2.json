{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './reducers/authReducer';\nimport cartReducer from './reducers/cartReducer';\nimport productReducer from './reducers/productReducer';\nimport orderReducer from './reducers/orderReducer';\nconst rootReducer = combineReducers({\n  authReducer,\n  cartReducer,\n  productReducer,\n  orderReducer\n});\nconst middleware = [thunk];\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['cartReducer', 'authReducer']\n};\nconst PersistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(PersistedReducer, composeWithDevTools(applyMiddleware(...middleware)));\nconst persistedStore = persistStore(store);\nexport { store, persistedStore };","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","persistStore","persistReducer","storage","authReducer","cartReducer","productReducer","orderReducer","rootReducer","middleware","persistConfig","key","whitelist","PersistedReducer","store","persistedStore"],"sources":["D:/Study/SEM_07/Final Year Project/Project/ShramikFrontend/shramik/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport authReducer from './reducers/authReducer';\r\nimport cartReducer from './reducers/cartReducer';\r\nimport productReducer from './reducers/productReducer';\r\nimport orderReducer from './reducers/orderReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  cartReducer,\r\n  productReducer,\r\n  orderReducer,\r\n});\r\nconst middleware = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: ['cartReducer', 'authReducer'],\r\n};\r\n\r\nconst PersistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  PersistedReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport { store, persistedStore };\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,yBAAyB;AAElD,MAAMC,WAAW,GAAGX,eAAe,CAAC;EAClCO,WAAW;EACXC,WAAW;EACXC,cAAc;EACdC;AACF,CAAC,CAAC;AACF,MAAME,UAAU,GAAG,CAACV,KAAK,CAAC;AAE1B,MAAMW,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXR,OAAO,EAAEA,OAAO;EAChBS,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa;AAC1C,CAAC;AAED,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAa,EAAEF,WAAW,CAAC;AAEnE,MAAMM,KAAK,GAAGlB,WAAW,CACvBiB,gBAAgB,EAChBb,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAU,CAAC,CAAC,CACpD;AAED,MAAMM,cAAc,GAAGd,YAAY,CAACa,KAAK,CAAC;AAE1C,SAASA,KAAK,EAAEC,cAAc"},"metadata":{},"sourceType":"module"}