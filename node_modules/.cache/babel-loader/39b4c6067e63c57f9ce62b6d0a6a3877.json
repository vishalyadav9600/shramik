{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './reducers/authReducer';\nimport cartReducer from './reducers/cartReducer';\nimport productReducer from './reducers/productReducer';\nimport orderReducer from './reducers/orderReducer';\nconst rootReducer = combineReducers({\n  authReducer,\n  cartReducer,\n  productReducer,\n  orderReducer\n});\nconst middleware = [thunk];\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['cartReducer', 'authReducer']\n};\nconst PersistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(PersistedReducer, composeWithDevTools(applyMiddleware(...middleware)));\nconst persistedStore = persistStore(store);\nexport { store, persistedStore };","map":{"version":3,"sources":["D:/Study/SEM_07/Final Year Project/Project/shramik/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","persistStore","persistReducer","storage","authReducer","cartReducer","productReducer","orderReducer","rootReducer","middleware","persistConfig","key","whitelist","PersistedReducer","store","persistedStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCO,EAAAA,WADkC;AAElCC,EAAAA,WAFkC;AAGlCC,EAAAA,cAHkC;AAIlCC,EAAAA;AAJkC,CAAD,CAAnC;AAMA,MAAME,UAAU,GAAG,CAACV,KAAD,CAAnB;AAEA,MAAMW,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA,OAAO,EAAEA,OAFW;AAGpBS,EAAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,aAAhB;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBF,WAAhB,CAAvC;AAEA,MAAMM,KAAK,GAAGlB,WAAW,CACvBiB,gBADuB,EAEvBb,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAFI,CAAzB;AAKA,MAAMM,cAAc,GAAGd,YAAY,CAACa,KAAD,CAAnC;AAEA,SAASA,KAAT,EAAgBC,cAAhB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport authReducer from './reducers/authReducer';\r\nimport cartReducer from './reducers/cartReducer';\r\nimport productReducer from './reducers/productReducer';\r\nimport orderReducer from './reducers/orderReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer,\r\n  cartReducer,\r\n  productReducer,\r\n  orderReducer,\r\n});\r\nconst middleware = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: ['cartReducer', 'authReducer'],\r\n};\r\n\r\nconst PersistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  PersistedReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport { store, persistedStore };\r\n"]},"metadata":{},"sourceType":"module"}