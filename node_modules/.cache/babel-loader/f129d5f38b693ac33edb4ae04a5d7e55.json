{"ast":null,"code":"import * as actionType from '../actionTypes/orderActionTypes';\nimport api from '../../helpers/api.js';\nexport const processOrder = order => {\n  return async dispatch => {\n    await api.addorder(order).then(res => {\n      dispatch({\n        type: actionType.ON_ORDER_SUCCESS,\n        payload: { ...res.data\n        }\n      });\n    }).catch(error => {\n      var _error$response;\n\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        dispatch({\n          type: 'SIGN_OUT',\n          payload: {\n            error: 'session expired'\n          }\n        });\n      } else {\n        dispatch({\n          type: actionType.ON_ORDER_ERROR,\n          payload: {\n            error: error.response.data.error\n          }\n        });\n      }\n    });\n  };\n};\nexport const getUserOrders = () => {\n  return async dispatch => {\n    await api.getuserorders().then(res => {\n      dispatch({\n        type: actionType.GET_USER_ORDERS_SUCCESS,\n        payload: { ...res.data\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: actionType.GET_USER_ORDERS_ERROR,\n        payload: {\n          error: error.response.data.error\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:/Study/SEM_07/Final Year Project/Project/shramik/src/store/actions/orderActions.js"],"names":["actionType","api","processOrder","order","dispatch","addorder","then","res","type","ON_ORDER_SUCCESS","payload","data","catch","error","response","status","ON_ORDER_ERROR","getUserOrders","getuserorders","GET_USER_ORDERS_SUCCESS","GET_USER_ORDERS_ERROR"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,iCAA5B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMH,GAAG,CACNI,QADG,CACMF,KADN,EAEHG,IAFG,CAEGC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,UAAU,CAACS,gBADV;AAEPC,QAAAA,OAAO,EAAE,EACP,GAAGH,GAAG,CAACI;AADA;AAFF,OAAD,CAAR;AAMD,KATG,EAUHC,KAVG,CAUIC,KAAD,IAAW;AAAA;;AAChB,UAAI,oBAAAA,KAAK,CAACC,QAAN,oEAAgBC,MAAhB,MAA2B,GAA/B,EAAoC;AAClCX,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,UADC;AAEPE,UAAAA,OAAO,EAAE;AACPG,YAAAA,KAAK,EAAE;AADA;AAFF,SAAD,CAAR;AAMD,OAPD,MAOO;AACLT,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAER,UAAU,CAACgB,cADV;AAEPN,UAAAA,OAAO,EAAE;AACPG,YAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBE;AADpB;AAFF,SAAD,CAAR;AAMD;AACF,KA1BG,CAAN;AA2BD,GA5BD;AA6BD,CA9BM;AAgCP,OAAO,MAAMI,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOb,QAAP,IAAoB;AACzB,UAAMH,GAAG,CACNiB,aADG,GAEHZ,IAFG,CAEGC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,UAAU,CAACmB,uBADV;AAEPT,QAAAA,OAAO,EAAE,EACP,GAAGH,GAAG,CAACI;AADA;AAFF,OAAD,CAAR;AAMD,KATG,EAUHC,KAVG,CAUIC,KAAD,IAAW;AAChBT,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,UAAU,CAACoB,qBADV;AAEPV,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBE;AADpB;AAFF,OAAD,CAAR;AAMD,KAjBG,CAAN;AAkBD,GAnBD;AAoBD,CArBM","sourcesContent":["import * as actionType from '../actionTypes/orderActionTypes';\r\nimport api from '../../helpers/api.js';\r\n\r\nexport const processOrder = (order) => {\r\n  return async (dispatch) => {\r\n    await api\r\n      .addorder(order)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionType.ON_ORDER_SUCCESS,\r\n          payload: {\r\n            ...res.data,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response?.status === 401) {\r\n          dispatch({\r\n            type: 'SIGN_OUT',\r\n            payload: {\r\n              error: 'session expired',\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: actionType.ON_ORDER_ERROR,\r\n            payload: {\r\n              error: error.response.data.error,\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserOrders = () => {\r\n  return async (dispatch) => {\r\n    await api\r\n      .getuserorders()\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionType.GET_USER_ORDERS_SUCCESS,\r\n          payload: {\r\n            ...res.data,\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: actionType.GET_USER_ORDERS_ERROR,\r\n          payload: {\r\n            error: error.response.data.error,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}