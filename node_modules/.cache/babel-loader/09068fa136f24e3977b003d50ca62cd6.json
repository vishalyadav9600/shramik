{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/food-ordering-website-main/src/components/user_profile/Userorders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport noitemsfound from '../../utils/noitems-order.json'; // material - ui;\n\nimport { makeStyles, Box, Chip, Typography } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getUserOrders } from '../../store/actions/orderActions';\nimport NotFound from '../../pages/NotFound'; // style const\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  profileheading: {\n    fontWeight: '700',\n    fontSize: '1.4rem',\n    fontFamily: 'mulish',\n    marginBottom: '10px',\n    paddingLeft: '14px',\n    marginTop: '30px'\n  },\n  cell: {\n    border: 'none'\n  },\n  more_details: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main\n  }\n}));\nexport default function Userorders() {\n  _s();\n\n  const {\n    profileheading,\n    cell,\n    more_details\n  } = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserOrders());\n  }, []);\n  const state = useSelector(state => state.orderReducer.orders); // data\n\n  const checkStatus = status => {\n    if (status === 'Delivered') {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        label: status,\n        style: {\n          color: 'green',\n          borderColor: 'green'\n        },\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    } else if (status === 'Failed') {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        label: status,\n        style: {\n          color: '#f44336',\n          borderColor: '#f44336'\n        },\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    } else if (status === 'Pending') {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        label: status,\n        color: \"primary\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n  }; //button for read more details\n\n\n  const getDetailsButton = item => {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      className: more_details,\n      state: {\n        from: '/profile/orders',\n        item: item\n      },\n      component: Link,\n      to: \"/profile/o\",\n      children: \"more details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'Transaction ID',\n    width: 150\n  }, {\n    field: 'date',\n    headerName: 'Date',\n    width: 200\n  }, {\n    field: 'payment_amount',\n    headerName: 'Payment Amount',\n    width: 160\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    renderCell: params => checkStatus(params.row.status)\n  }, {\n    field: 'more_details',\n    headerName: 'Payment Method',\n    width: 110,\n    renderCell: params => getDetailsButton(params.row.item)\n  }];\n\n  const prepareRows = () => {\n    const orders = [];\n    [...state].map(item => {\n      orders.push({\n        id: item.paymentResult.id,\n        date: new Date(item.createdAt).toLocaleDateString(),\n        more_details: 'details',\n        status: item.isDelivered,\n        payment_amount: item.totalPrice,\n        item: item\n      });\n    });\n    return orders;\n  };\n\n  const rows = prepareRows();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: window.store.getState().orderReducer.orders.length === 0 ? /*#__PURE__*/_jsxDEV(NotFound, {\n      animationData: noitemsfound,\n      path: \"/allmeals\",\n      text: \"Make First Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        borderRadius: '5px',\n        background: 'white',\n        padding: '10px',\n        height: 'max-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: profileheading,\n        variant: \"h1\",\n        children: \"My Order History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        height: \"max-content !important\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          classes: {\n            root: cell\n          },\n          autoHeight: true,\n          rowHeight: 80,\n          showCellRightBorder: false,\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5],\n          checkboxSelection: false,\n          disableSelectionOnClick: true,\n          disableMultipleSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Userorders, \"XZdTO6mA3QgYtAhKuw+hBs5VL9I=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Userorders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userorders\");","map":{"version":3,"sources":["/Users/vishal/Desktop/food-ordering-website-main/src/components/user_profile/Userorders.js"],"names":["React","useEffect","useDispatch","useSelector","Link","noitemsfound","makeStyles","Box","Chip","Typography","DataGrid","getUserOrders","NotFound","useStyles","theme","profileheading","fontWeight","fontSize","fontFamily","marginBottom","paddingLeft","marginTop","cell","border","more_details","textDecoration","color","palette","secondary","main","Userorders","dispatch","state","orderReducer","orders","checkStatus","status","borderColor","getDetailsButton","item","from","columns","field","headerName","width","description","sortable","renderCell","params","row","prepareRows","map","push","id","paymentResult","date","Date","createdAt","toLocaleDateString","isDelivered","payment_amount","totalPrice","rows","window","store","getState","length","borderRadius","background","padding","height","root"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport noitemsfound from '../../utils/noitems-order.json';\n\n// material - ui;\n\nimport { makeStyles, Box, Chip, Typography } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getUserOrders } from '../../store/actions/orderActions';\nimport NotFound from '../../pages/NotFound';\n\n// style const\nconst useStyles = makeStyles((theme) => ({\n  profileheading: {\n    fontWeight: '700',\n    fontSize: '1.4rem',\n    fontFamily: 'mulish',\n    marginBottom: '10px',\n    paddingLeft: '14px',\n    marginTop: '30px',\n  },\n  cell: {\n    border: 'none',\n  },\n  more_details: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function Userorders() {\n  const { profileheading, cell, more_details } = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserOrders());\n  }, []);\n  const state = useSelector((state) => state.orderReducer.orders);\n\n  // data\n  const checkStatus = (status) => {\n    if (status === 'Delivered') {\n      return (\n        <Chip\n          label={status}\n          style={{ color: 'green', borderColor: 'green' }}\n          variant=\"outlined\"\n        />\n      );\n    } else if (status === 'Failed') {\n      return (\n        <Chip\n          label={status}\n          style={{ color: '#f44336', borderColor: '#f44336' }}\n          variant=\"outlined\"\n        />\n      );\n    } else if (status === 'Pending') {\n      return <Chip label={status} color=\"primary\" variant=\"outlined\" />;\n    }\n  };\n\n  //button for read more details\n  const getDetailsButton = (item) => {\n    return (\n      <Typography\n        className={more_details}\n        state={{ from: '/profile/orders', item: item }}\n        component={Link}\n        to=\"/profile/o\"\n      >\n        more details\n      </Typography>\n    );\n  };\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'Transaction ID',\n      width: 150,\n    },\n    {\n      field: 'date',\n      headerName: 'Date',\n      width: 200,\n    },\n    {\n      field: 'payment_amount',\n      headerName: 'Payment Amount',\n      width: 160,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      renderCell: (params) => checkStatus(params.row.status),\n    },\n\n    {\n      field: 'more_details',\n      headerName: 'Payment Method',\n      width: 110,\n      renderCell: (params) => getDetailsButton(params.row.item),\n    },\n  ];\n\n  const prepareRows = () => {\n    const orders = [];\n    [...state].map((item) => {\n      orders.push({\n        id: item.paymentResult.id,\n        date: new Date(item.createdAt).toLocaleDateString(),\n        more_details: 'details',\n        status: item.isDelivered,\n        payment_amount: item.totalPrice,\n        item: item,\n      });\n    });\n    return orders;\n  };\n\n  const rows = prepareRows();\n\n  return (\n    <>\n      {window.store.getState().orderReducer.orders.length === 0 ? (\n        <NotFound\n          animationData={noitemsfound}\n          path=\"/allmeals\"\n          text=\"Make First Order\"\n        />\n      ) : (\n        <div\n          style={{\n            width: '100%',\n            borderRadius: '5px',\n            background: 'white',\n            padding: '10px',\n            height: 'max-content',\n          }}\n        >\n          <Typography className={profileheading} variant=\"h1\">\n            My Order History\n          </Typography>\n\n          <Box height=\"max-content !important\">\n            <DataGrid\n              classes={{ root: cell }}\n              autoHeight={true}\n              rowHeight={80}\n              showCellRightBorder={false}\n              rows={rows}\n              columns={columns}\n              pageSize={5}\n              rowsPerPageOptions={[5]}\n              checkboxSelection={false}\n              disableSelectionOnClick\n              disableMultipleSelection={true}\n            />\n          </Box>\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}