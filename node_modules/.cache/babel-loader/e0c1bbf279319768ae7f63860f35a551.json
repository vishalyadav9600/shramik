{"ast":null,"code":"var _jsxFileName = \"/Users/vishal/Desktop/food-ordering-website-main/src/components/auth/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@mui/material';\nimport { Typography, makeStyles, Button, Grid, Box, CircularProgress } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root_left_lower: {\n    //border: '1px solid red',\n    '& > :nth-child(1)': {\n      fontFamily: 'Mulish',\n      fontSize: '.9rem'\n    },\n    '& > :nth-child(2)': {\n      fontFamily: 'Mulish',\n      fontSize: '1.8rem',\n      fontWeight: '700'\n    }\n  },\n  login_button: {\n    width: '100%',\n    marginTop: '20px',\n    background: theme.palette.green,\n    color: 'white',\n    '& :hover': {\n      color: 'black' //  background: 'lightgreen',\n\n    }\n  },\n  recommendation: {\n    fontFamily: 'Mulish',\n    fontSize: '.9rem'\n  },\n  recommendation_link: {\n    fontFamily: 'Mulish',\n    fontWeight: '600',\n    fontSize: '.9rem',\n    cursor: 'pointer',\n    marginLeft: '5px'\n  }\n}));\nimport Textfield from '../partials/FormUI/Textfield';\nimport { signup } from '../../store/actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm({\n  onclick,\n  setClickData,\n  showToast,\n  path\n}) {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    root_left_lower,\n    login_button,\n    recommendation,\n    recommendation_link\n  } = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: root_left_lower,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"get your food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        },\n        onSubmit: async values => {\n          await dispatch(signup(values));\n\n          if (window.store.getState().authReducer.authenticated === true) {\n            await setClickData({\n              type: 'success',\n              content: 'You account was successfully created'\n            });\n            showToast();\n            navigate(path || '/dashboard');\n          } else {\n            await setClickData({\n              type: 'error',\n              content: window.store.getState().authReducer.error\n            });\n            showToast();\n          }\n        },\n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().required('First Name is Required'),\n          lastName: Yup.string().required('Last Name is Required'),\n          email: Yup.string().email('Invalid email format').required('Required'),\n          password: Yup.string().min(6, 'password must be atleast 6 characters').required('Password is required'),\n          confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'password must match').required('Please confirm password ðŸ˜±')\n        }),\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 12,\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  name: \"firstName\",\n                  helpertext: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  name: \"lastName\",\n                  helpertext: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  name: \"email\",\n                  helpertext: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  type: \"password\",\n                  name: \"password\",\n                  helpertext: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                marginTop: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(Textfield, {\n                  type: \"password\",\n                  name: \"confirmPassword\",\n                  helpertext: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"secondary\",\n                    size: \"1rem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 27\n                  }, this) : null,\n                  className: login_button,\n                  disableElevation: true,\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      alignItems: \"center\",\n      display: \"flex\",\n      marginTop: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: recommendation,\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        onClick: () => onclick('login'),\n        color: \"secondary\",\n        className: recommendation_link,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"Rx0VrpKVbRj70xQJCsClfEGrxjg=\", false, function () {\n  return [useNavigate, useDispatch, useStyles];\n});\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/vishal/Desktop/food-ordering-website-main/src/components/auth/SignUpForm.js"],"names":["React","Formik","Form","Yup","useNavigate","Alert","AlertTitle","Typography","makeStyles","Button","Grid","Box","CircularProgress","useDispatch","useStyles","theme","root_left_lower","fontFamily","fontSize","fontWeight","login_button","width","marginTop","background","palette","green","color","recommendation","recommendation_link","cursor","marginLeft","Textfield","signup","SignUpForm","onclick","setClickData","showToast","path","navigate","dispatch","firstName","lastName","email","password","confirmPassword","values","window","store","getState","authReducer","authenticated","type","content","error","object","shape","string","required","min","oneOf","ref","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@mui/material';\nimport {\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root_left_lower: {\n    //border: '1px solid red',\n    '& > :nth-child(1)': {\n      fontFamily: 'Mulish',\n      fontSize: '.9rem',\n    },\n    '& > :nth-child(2)': {\n      fontFamily: 'Mulish',\n      fontSize: '1.8rem',\n      fontWeight: '700',\n    },\n  },\n\n  login_button: {\n    width: '100%',\n    marginTop: '20px',\n    background: theme.palette.green,\n    color: 'white',\n    '& :hover': {\n      color: 'black',\n      //  background: 'lightgreen',\n    },\n  },\n\n  recommendation: {\n    fontFamily: 'Mulish',\n    fontSize: '.9rem',\n  },\n  recommendation_link: {\n    fontFamily: 'Mulish',\n    fontWeight: '600',\n    fontSize: '.9rem',\n    cursor: 'pointer',\n    marginLeft: '5px',\n  },\n}));\n\nimport Textfield from '../partials/FormUI/Textfield';\nimport { signup } from '../../store/actions/authActions';\n\nexport default function SignUpForm({ onclick, setClickData, showToast, path }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    root_left_lower,\n    login_button,\n    recommendation,\n    recommendation_link,\n  } = useStyles();\n  return (\n    <div className={root_left_lower}>\n      <Typography>get your food</Typography>\n      <Typography variant=\"h1\" component=\"h1\">\n        Create an Account\n      </Typography>\n      {/* third */}\n      <Box marginTop=\"20px\">\n        <Formik\n          initialValues={{\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n          }}\n          onSubmit={async (values) => {\n            await dispatch(signup(values));\n\n            if (window.store.getState().authReducer.authenticated === true) {\n              await setClickData({\n                type: 'success',\n                content: 'You account was successfully created',\n              });\n              showToast();\n              navigate(path || '/dashboard');\n            } else {\n              await setClickData({\n                type: 'error',\n                content: window.store.getState().authReducer.error,\n              });\n              showToast();\n            }\n          }}\n          validationSchema={Yup.object().shape({\n            firstName: Yup.string().required('First Name is Required'),\n            lastName: Yup.string().required('Last Name is Required'),\n            email: Yup.string()\n              .email('Invalid email format')\n              .required('Required'),\n            password: Yup.string()\n              .min(6, 'password must be atleast 6 characters')\n              .required('Password is required'),\n            confirmPassword: Yup.string()\n              .oneOf([Yup.ref('password'), null], 'password must match')\n              .required('Please confirm password ðŸ˜±'),\n          })}\n        >\n          {({ isSubmitting }) => (\n            <Form autoComplete=\"off\">\n              <Grid container>\n                <Grid xs={12} item>\n                  <Box marginTop=\"10px\">\n                    <Textfield name=\"firstName\" helpertext=\"First Name\" />\n                  </Box>\n                  <Box marginTop=\"10px\">\n                    <Textfield name=\"lastName\" helpertext=\"Last Name\" />\n                  </Box>\n                  <Box marginTop=\"10px\">\n                    <Textfield name=\"email\" helpertext=\"Email Address\" />\n                  </Box>\n\n                  <Box marginTop=\"10px\">\n                    <Textfield\n                      type=\"password\"\n                      name=\"password\"\n                      helpertext=\"Password\"\n                    />\n                  </Box>\n                  <Box marginTop=\"10px\">\n                    <Textfield\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      helpertext=\"Confirm Password\"\n                    />\n                  </Box>\n                  <Box>\n                    <Button\n                      startIcon={\n                        isSubmitting ? (\n                          <CircularProgress color=\"secondary\" size=\"1rem\" />\n                        ) : null\n                      }\n                      className={login_button}\n                      disableElevation\n                      variant=\"contained\"\n                      type=\"submit\"\n                    >\n                      Sign Up\n                    </Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n\n      {/* <div className={sign_up_google}>\n      <img src=\"./social-google.svg\" />\n      <Typography>Sign up with Google</Typography>\n    </div> */}\n      <Box alignItems=\"center\" display=\"flex\" marginTop=\"10px\">\n        <Typography className={recommendation}>\n          Already have an account?\n        </Typography>\n        <Typography\n          onClick={() => onclick('login')}\n          color=\"secondary\"\n          className={recommendation_link}\n        >\n          Log In\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}