{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\SEM_07\\\\Final Year Project\\\\Project\\\\shramik\\\\src\\\\components\\\\layout\\\\MainLayout\\\\Header\\\\NotificationSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { Avatar, Box, makeStyles, useTheme, ButtonBase, Badge, CardContent, ClickAwayListener, Divider, Grid, Paper, Popper, Typography, useMediaQuery } from '@material-ui/core'; // project imports\n\nimport MainCard from '../../../../ui-component/cards/MainCard';\nimport Transitions from '../../../../ui-component/extended/Transitions';\nimport NotificationList from './NotificationList'; // assets\n\nimport { IconBell } from '@tabler/icons'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  headerAvatar: {\n    cursor: 'pointer',\n    borderRadius: '8px',\n    width: '34px',\n    height: '34px',\n    fontSize: '1.2rem',\n    transition: 'all .2s ease-in-out',\n    background: '#E2ECF6',\n    color: '#1275D1',\n    '&[aria-controls=\"menu-list-grow\"],&:hover': {\n      background: '#1275D1',\n      color: theme.palette.secondary.light\n    }\n  },\n  cardContent: {\n    padding: '0px !important'\n  },\n  divider: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  box: {\n    overflow: 'hidden',\n    borderRadius: '8px'\n  },\n  bodyPPacing: {\n    padding: '16px 16px 0'\n  },\n  textBoxSpacing: {\n    padding: '0px 16px'\n  }\n})); // ===========================|| NOTIFICATION ||=========================== //\n\nconst NotificationSection = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"span\",\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"secondary\",\n          badgeContent: 0,\n          overlap: \"circular\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"rounded\",\n            className: classes.headerAvatar,\n            ref: anchorRef,\n            \"aria-controls\": open ? 'menu-list-grow' : undefined,\n            \"aria-haspopup\": \"true\",\n            onClick: handleToggle,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(IconBell, {\n              stroke: 1.5,\n              size: \"1.3rem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      style: {\n        zIndex: 1000000000,\n        marginTop: '5px'\n      },\n      placement: 'bottom-end',\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [matchesXs ? 5 : 0, 20]\n          }\n        }]\n      },\n      children: ({\n        TransitionProps\n      }) => /*#__PURE__*/_jsxDEV(Transitions, {\n        in: open,\n        ...TransitionProps,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MainCard, {\n              border: false,\n              elevation: 16,\n              content: false,\n              boxShadow: true,\n              shadow: theme.shadows[16],\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.bodyPPacing,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            display: \"flex\",\n                            spacing: 2,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              style: {\n                                fontSize: '.94rem'\n                              },\n                              variant: \"subtitle1\",\n                              children: \"All Notification\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 157,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 156,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            style: {\n                              fontSize: '.94rem'\n                            },\n                            component: Link,\n                            to: \"#\",\n                            variant: \"subtitle2\",\n                            color: \"secondary\",\n                            children: \"Mark as all read\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 166,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"customscroll\",\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        direction: \"column\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          p: 0,\n                          children: /*#__PURE__*/_jsxDEV(Divider, {\n                            className: classes.divider\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(NotificationList, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationSection, \"56bdr5sQCTkK7fAWOViH4stk/iw=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = NotificationSection;\nexport default NotificationSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationSection\");","map":{"version":3,"sources":["D:/Study/SEM_07/Final Year Project/Project/shramik/src/components/layout/MainLayout/Header/NotificationSection.js"],"names":["React","Link","Avatar","Box","makeStyles","useTheme","ButtonBase","Badge","CardContent","ClickAwayListener","Divider","Grid","Paper","Popper","Typography","useMediaQuery","MainCard","Transitions","NotificationList","IconBell","useStyles","theme","headerAvatar","cursor","borderRadius","width","height","fontSize","transition","background","color","palette","secondary","light","cardContent","padding","divider","marginTop","marginBottom","box","overflow","bodyPPacing","textBoxSpacing","NotificationSection","classes","matchesXs","breakpoints","down","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","useEffect","focus","undefined","zIndex","modifiers","name","options","offset","TransitionProps","shadows"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\n\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  makeStyles,\r\n  useTheme,\r\n  ButtonBase,\r\n  Badge,\r\n  CardContent,\r\n  ClickAwayListener,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  Popper,\r\n  Typography,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from '../../../../ui-component/cards/MainCard';\r\nimport Transitions from '../../../../ui-component/extended/Transitions';\r\nimport NotificationList from './NotificationList';\r\n\r\n// assets\r\nimport { IconBell } from '@tabler/icons';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerAvatar: {\r\n    cursor: 'pointer',\r\n    borderRadius: '8px',\r\n    width: '34px',\r\n    height: '34px',\r\n    fontSize: '1.2rem',\r\n    transition: 'all .2s ease-in-out',\r\n    background: '#E2ECF6',\r\n    color: '#1275D1',\r\n    '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n      background: '#1275D1',\r\n      color: theme.palette.secondary.light,\r\n    },\r\n  },\r\n  cardContent: {\r\n    padding: '0px !important',\r\n  },\r\n\r\n  divider: {\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  box: {\r\n    overflow: 'hidden',\r\n    borderRadius: '8px',\r\n  },\r\n  bodyPPacing: {\r\n    padding: '16px 16px 0',\r\n  },\r\n  textBoxSpacing: {\r\n    padding: '0px 16px',\r\n  },\r\n}));\r\n\r\n// ===========================|| NOTIFICATION ||=========================== //\r\n\r\nconst NotificationSection = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"span\" className={classes.box}>\r\n        <ButtonBase>\r\n          <Badge color=\"secondary\" badgeContent={0} overlap=\"circular\">\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              className={classes.headerAvatar}\r\n              ref={anchorRef}\r\n              aria-controls={open ? 'menu-list-grow' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              color=\"inherit\"\r\n            >\r\n              <IconBell stroke={1.5} size=\"1.3rem\" />\r\n            </Avatar>\r\n          </Badge>\r\n        </ButtonBase>\r\n      </Box>\r\n      <Popper\r\n        style={{ zIndex: 1000000000, marginTop: '5px' }}\r\n        placement={'bottom-end'}\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n        popperOptions={{\r\n          modifiers: [\r\n            {\r\n              name: 'offset',\r\n              options: {\r\n                offset: [matchesXs ? 5 : 0, 20],\r\n              },\r\n            },\r\n          ],\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Transitions in={open} {...TransitionProps}>\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MainCard\r\n                  border={false}\r\n                  elevation={16}\r\n                  content={false}\r\n                  boxShadow\r\n                  shadow={theme.shadows[16]}\r\n                >\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <div className={classes.bodyPPacing}>\r\n                          <Grid\r\n                            container\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"space-between\"\r\n                          >\r\n                            <Grid item>\r\n                              <Box display=\"flex\" spacing={2}>\r\n                                <Typography\r\n                                  style={{ fontSize: '.94rem' }}\r\n                                  variant=\"subtitle1\"\r\n                                >\r\n                                  All Notification\r\n                                </Typography>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <Typography\r\n                                style={{ fontSize: '.94rem' }}\r\n                                component={Link}\r\n                                to=\"#\"\r\n                                variant=\"subtitle2\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                Mark as all read\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <div className=\"customscroll\">\r\n                          <Grid container direction=\"column\" spacing={2}>\r\n                            <Grid item xs={12} p={0}>\r\n                              <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <NotificationList />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </MainCard>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Transitions>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationSection;\r\n"]},"metadata":{},"sourceType":"module"}